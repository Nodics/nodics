
Todos:
  New:
    ✔ Update updated timestamp for each item update @done(18-03-04 23:42)
    ✔ Handle Dynamic property handler - Dynamic Attributs can be handled via Mongoose virtuals, Like: @done(18-03-05 18:13)
      personSchema.virtual('fullName').get(function () {
        return this.name.first + ' ' + this.name.last;
      });
    - Add hook for each layer and each method level
    ✔ Start all Active cronJobs on start-up @done(18-03-09 22:25)
    - Only active jobs need to be executed
    - Test cronJob update/remove while its running, if it is working fine
    ✔ Make custom code seperate from Nodics Home directory @done(18-03-05 21:16)
    ✔ Define namespace capability - load cleasses from sub-folders @done(18-03-09 22:25)
    - Add Service to return sample request object for all the services.
    - Implement Jsdoc NPM to generate JavaScript Docs
    ✔ Make all framework load Prmoisify (Loading all modules in sequence) @done(18-03-05 22:50)
    ✘ Invalidation process for authToken (Should be common for module level caching) @cancelled(18-03-04 23:01)
    ✘ Cache Auth token in each module @cancelled(18-03-04 23:01)
    ✔ Make item and API TTL at configuration level @done(18-03-04 22:39)
    
    - Build common event Listener for all module (May be for cache invalidation)
    - Clustered Event execution process
    ✔ Authentication and Authorization for background processes like CronJob Execution @done(18-03-09 22:24)
    ✔ Create default data import process @done(18-03-09 22:24)

    ✔ Data Import process @done(18-03-07 11:33)
    - Data Export process

    ✔ Client for ActiveMQ @done(18-03-05 22:53)
    ✔ Client for Kafka @done(18-03-05 22:53)

    - Check if Test Cases are loading properly from environment location
    - Check if Data is loading properly from environment location

    ✔ Execute Test cases from API - Done @done(18-03-04 21:00)
    ✔ Connect Test DB only if required (Check may be its working like this only) - Not possible, If I need to run @done(18-03-04 21:00) test cases from API will not work. - Done @done(18-03-04 21:00)

    ✔ Password create, update and reset @done(18-03-12 12:41)
    ✔ Lock after secified login attempts @done(18-03-12 12:41)
    ✔ Password un-lock system @done(18-03-12 12:41)


Todos:
  Documentation Points:
    - Layered Architecture support to extend and generalize code in layered
    - Bussiness level shared functionality - Layered Architecture
    - Distrubuted module management - Diployment topology - Layered Architecture
    - Multi-Application management - each application may use different set of modules
    - Database handling with MongoDB
    - Module-Specific database support
    - Multi-Enterprise with Multi tenancy support
    - Micro-Services Development and deployment support
    - Test-Case framework
      - Module Specific test cases
      - Application Specific test cases
      - Environment Specific test cases
      - Push-Pop and only Pop test cases execution
    - Data Import process
      - Initial data load
      - Core data load
      - Sample data load
      - Application Specific data load
      - Environment Specific data load
    - Scheduled activity execution support - CronJobs
    - Modular Event management system support
    - Schema lyfe cycle management
    - Process creation and management system
    - Secured, un-secured and special request handler support
    - Tow level Distributed cache management system (Application and module specific)
    - Messaging system support with
      - Tibco message push and pop
      - ActiveMQ message push and pop
      - Kafka message push and pop
    - Full documentation and Real time support

    
